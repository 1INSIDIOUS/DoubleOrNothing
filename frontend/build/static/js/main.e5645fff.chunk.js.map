{"version":3,"sources":["assets/ig_coin_card.png","assets/ig_cloud.png","assets/ig_bg.jpg","components/Coin/Coin.tsx","components/Display/Display.tsx","components/Game/Game.tsx","components/GameContractLoader/GameContractLoader.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Coin","_React$PureComponent","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","props","showFace","React","PureComponent","Display","_this$props","balance","betAmount","parseFloat","formatEther","toFixed","Game","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","animating","_this2","playGame","disabled","win","double","reset","components_Display_Display","toString","src","cardSrc","alt","onAnimationEnd","setState","components_Coin_Coin","onClick","flipping","INITIAL_AMOUNT","GameContractLoader","watchBalance","signer","getAddress","then","address","setInterval","provider","getBalance","bal","play","val","contract","bet","parseEther","toHexString","gasLimit","bigNumberify","trans","wait","receipt","eventValue","events","winnings","finally","newBet","Contract","contractAddress","abi","initialized","error","deployed","catch","_this$state","renderError","components_Game_Game","renderLoading","App","web3CapableBrowser","window","ethereum","Web3Provider","getSigner","enable","enabled","topBg","cloudSrc","components_GameContractLoader_GameContractLoader","process","renderEnableProvider","renderWeb3MissingError","Boolean","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5645fff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ig_coin_card.968dcb99.png\";","module.exports = __webpack_public_path__ + \"static/media/ig_cloud.8b23be96.png\";","module.exports = __webpack_public_path__ + \"static/media/ig_bg.378689a4.jpg\";","import React from 'react'\nimport './Coin.css'\n\ninterface ICoinProps {\n  showFace: boolean\n}\n\nexport class Coin extends React.PureComponent<ICoinProps> {\n  render() {\n    return (\n      <div\n        className={'coin-container ' + (this.props.showFace ? 'flipped' : '')}\n      >\n        <div className=\"disk-body\" />\n        <div className=\"disk-body back\" />\n        <div className=\"top-face top-back-face disk\" />\n        <div className=\"disk face bottom-back-face\" />\n        <div className=\"disk bottom-front-face\" />\n        <div className=\"face top-face top-face-front disk\" />\n      </div>\n    )\n  }\n}\n\nexport default Coin\n","import React from 'react'\nimport './Display.css'\nimport { formatEther } from 'ethers/utils'\n\ninterface IDisplayProps {\n  balance: string\n  betAmount: string\n}\n\nexport class Display extends React.PureComponent<IDisplayProps> {\n  render() {\n    const { balance, betAmount } = this.props\n    return (\n      <div className=\"display\">\n        <div className=\"title-container\">\n          <div className=\"title\">Balance:</div>\n          <div className=\"value\">\n            {parseFloat(formatEther(balance)).toFixed(2)} TT\n          </div>\n        </div>\n        <div className=\"title-container\">\n          <div className=\"title\">Bet Size:</div>\n          <div className=\"value\">{betAmount} TT</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Display\n","import React from 'react'\nimport './Game.css'\nimport Coin from '../Coin/Coin'\nimport Display from '../Display/Display'\nimport cardSrc from '../../assets/ig_coin_card.png'\n\ninterface IGameProps {\n  playGame(): any\n  double(): any\n  reset(): any\n  flipping: boolean\n  disabled: boolean\n  win: boolean\n  balance: string\n  betAmount: number\n}\n\ninterface IGameState {\n  animating: boolean\n}\n\nexport class Game extends React.PureComponent<IGameProps, IGameState> {\n  static getDerivedStateFromProps(props: IGameProps, state: IGameState) {\n    return props.flipping && !state.animating ? { animating: true } : null\n  }\n\n  state = {\n    animating: false\n  }\n\n  render() {\n    const {\n      playGame,\n      disabled,\n      win,\n      double,\n      balance,\n      betAmount,\n      reset\n    } = this.props\n    const { animating } = this.state\n    return (\n      <div className=\"game-container\">\n        <div className=\"display-container\">\n          <Display balance={balance} betAmount={betAmount.toString()} />\n        </div>\n        <div className=\"coin-display-container container\">\n          <img src={cardSrc} alt=\"\" />\n          <div className=\"center\">\n            <div\n              className={animating ? 'coin flip' : 'coin'}\n              onAnimationEnd={() => {\n                this.setState({ animating: false })\n              }}\n            >\n              <Coin showFace={!win} />\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <button\n            onClick={playGame}\n            disabled={disabled}\n            className=\"bet-button button\"\n          />\n        </div>\n        <div className=\"container\">\n          <button\n            onClick={double}\n            disabled={disabled || win}\n            className=\"double-button button\"\n          />\n          <button\n            onClick={reset}\n            disabled={disabled}\n            className=\"reset-button button\"\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Game\n","import React from 'react'\nimport { Signer, Contract } from 'ethers'\nimport { abi } from './DoubleOrNothing.json'\nimport Game from '../Game/Game'\nimport { bigNumberify, parseEther } from 'ethers/utils'\nimport { TransactionReceipt, TransactionResponse } from 'ethers/providers'\n\ninterface IGameProps {\n  contractAddress: string\n  signer: Signer\n}\n\ninterface IGameState {\n  contract: Contract\n  betAmount: number\n  balance: string\n  initialized: boolean\n  error: boolean\n  disabled: boolean\n  flipping: boolean\n  win: boolean\n}\n\nconst INITIAL_AMOUNT = 0.5\n\nexport class GameContractLoader extends React.PureComponent<\n  IGameProps,\n  IGameState\n> {\n  constructor(props: IGameProps) {\n    super(props)\n    const contract = new Contract(props.contractAddress, abi, props.signer)\n    this.watchBalance()\n    this.state = {\n      betAmount: INITIAL_AMOUNT,\n      balance: '',\n      contract,\n      win: true,\n      initialized: false,\n      error: false,\n      disabled: false,\n      flipping: false\n    }\n    contract\n      .deployed()\n      .then(() => {\n        this.setState({ initialized: true })\n      })\n      .catch(() => {\n        this.setState({ error: true })\n      })\n  }\n\n  watchBalance = () => {\n    this.props.signer.getAddress().then(address =>\n      setInterval(() => {\n        this.props.signer.provider!.getBalance(address).then(bal => {\n          this.setState({ balance: bal.toString() })\n        })\n      }, 500)\n    )\n  }\n\n  renderError() {\n    return <div>Error loading contract</div>\n  }\n\n  renderLoading() {\n    return <div>Loading...</div>\n  }\n\n  play = (val: number) => {\n    this.setState({ disabled: true })\n    this.state.contract\n      .bet({\n        value: parseEther(val.toString()).toHexString(),\n        // because there is an if else based on time, the estimate gas will fail and teh transaction will fail\n        // you must set the gas limit\n        gasLimit: bigNumberify('40000').toHexString()\n      })\n      .then((trans: TransactionResponse) => {\n        this.setState({ flipping: true })\n        return trans.wait()\n      })\n      .then((receipt: TransactionReceipt) => {\n        //@ts-ignore\n        const eventValue = receipt.events[0].args\n        this.setState({\n          flipping: false,\n          win: eventValue.winnings.toString() !== '0'\n        })\n      })\n      .finally(() => {\n        this.setState({ disabled: false, flipping: false })\n      })\n  }\n\n  playGame = () => {\n    this.play(this.state.betAmount)\n  }\n\n  double = () => {\n    const newBet = this.state.betAmount * 2\n    this.setState({ betAmount: newBet })\n    this.play(newBet)\n  }\n\n  reset = () => {\n    this.setState({ betAmount: INITIAL_AMOUNT })\n  }\n\n  render() {\n    const {\n      initialized,\n      error,\n      disabled,\n      flipping,\n      win,\n      balance,\n      betAmount\n    } = this.state\n    if (error) {\n      return this.renderError()\n    } else if (!initialized) {\n      return this.renderLoading()\n    }\n    return (\n      <Game\n        double={this.double}\n        playGame={this.playGame}\n        reset={this.reset}\n        betAmount={betAmount}\n        balance={balance}\n        win={win}\n        disabled={disabled}\n        flipping={flipping}\n      />\n    )\n  }\n}\n\nexport default GameContractLoader\n","import React from 'react'\nimport './App.css'\nimport { Signer } from 'ethers'\nimport { Web3Provider } from 'ethers/providers'\nimport GameContractLoader from '../GameContractLoader/GameContractLoader'\nimport cloudSrc from '../../assets/ig_cloud.png'\nimport topBg from '../../assets/ig_bg.jpg'\n\ninterface IAppProps {}\ninterface IAppState {\n  signer?: Signer\n  enabled: boolean\n}\n\nexport class App extends React.PureComponent<IAppProps, IAppState> {\n  constructor(props: IAppProps) {\n    super(props)\n    const web3CapableBrowser = !!window.ethereum\n    let signer: Signer | undefined\n    if (web3CapableBrowser) {\n      signer = new Web3Provider(window.ethereum).getSigner()\n      window.ethereum.enable().catch(() =>\n        this.setState({\n          enabled: false\n        })\n      )\n    }\n    this.state = {\n      signer,\n      enabled: web3CapableBrowser\n    }\n  }\n\n  renderWeb3MissingError() {\n    return <div>Please connect a Web3 provider</div>\n  }\n\n  renderEnableProvider() {\n    return <div>Please enable Your Web3 Provider</div>\n  }\n\n  render() {\n    const { signer, enabled } = this.state\n    return (\n      <div className=\"app\">\n        <div className=\"top\">\n          <img src={topBg} alt=\"\" />\n        </div>\n        <div className=\"flex\" />\n        <div className=\"clouds\">\n          <img src={cloudSrc} />\n        </div>\n        <div className=\"overlay\">\n          <div className=\"content-container\">\n            {!signer ? (\n              this.renderWeb3MissingError()\n            ) : enabled ? (\n              <GameContractLoader\n                contractAddress={process.env.REACT_APP_CONTRACT_ADDRESS}\n                signer={signer}\n              />\n            ) : (\n              this.renderEnableProvider()\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}